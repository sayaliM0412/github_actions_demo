# This is a basic workflow to help you get started with Actions

name: Python package

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      # Runs a set of commands using the runners shell
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install unittest2
      - name: Test with unittest
        run: |
          python -m unittest

      # Create Docker image from code and push the resulting image to ECR, then to EKS
      - name: AWS ECR EKS
        # You may pin to the exact commit or the version.
        # uses: observian/littleci-littlecd-eks@61b6db8fdabf5a9246c50781facb0b05bd78cbaf
        uses: observian/littleci-littlecd-eks@0.1.1.6
        with:
          # The AWS access key id
          access_key_id: ${{ secrets.access_key_id}}
          # The AWS secret access key
          secret_access_key: ${{ secrets.secret_access_key}}
          # AWS Account ID
          account_id: 482780835707
          # Name of your ECR repository
          repo: sys-94
          # The AWS region
          region: us-west-2
          # the name of the eks cluster to which this image should be pushed
          eks_cluster_name: test-01
          # Comma-separated string of ECR image tags
          tags: ${{ github.sha }}
          # comma separated key-value pairs of build arguments to be passed to the docker build
          build-args: docker build -t ${{ github.sha }} .
          # Name of Dockerfile to use
          # dockerfile: Dockerfile
          # Path to Dockerfile, defaults to the working directory
          path: ../
          # manifest containing IMAGE_TAG placeholder to apply to the cluster
          k8s_manifest: ../helm/templates
          # the tag for hte k8s manifest to use when it references the repo.
          k8s_image_tag: ${{ github.sha }}
